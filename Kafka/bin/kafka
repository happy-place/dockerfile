#!/bin/bash

BROKER=localhost:9092

case $1 in
    start)
		$KAFKA_HOME/bin/kafka-server-start.sh $KAFKA_HOME/config/server.properties
	;;
	start-daemon)
		$KAFKA_HOME/bin/kafka-server-start.sh -daemon $KAFKA_HOME/config/server.properties
	;;
	stop)
		$KAFKA_HOME/bin/kafka-server-stop.sh
	;;
	status)
	    ps -ef | grep kafka_2.12-2.5.0 | grep 'java' | grep -v grep | awk '{print "pid: "$1}'
	;;
	restart)
		$KAFKA_HOME/bin/kafka-server-start.sh -daemon $KAFKA_HOME/config/server.properties
		$KAFKA_HOME/bin/kafka-server-stop.sh
	;;
	list_topics)
		$KAFKA_HOME/bin/kafka-topics.sh --list --zookeeper $ZOOKEEPER_HOST
	;;
	create_topic)
		$KAFKA_HOME/bin/kafka-topics.sh --create --zookeeper $ZOOKEEPER_HOST --topic $2 --partitions $3 --replication-factor $4
	;;
	del_topic)
		$KAFKA_HOME/bin/kafka-topics.sh --zookeeper $ZOOKEEPER_HOST --topic $2 --delete
	;;
	increase_partition)
		$KAFKA_HOME/bin/kafka-topics.sh --zookeeper $ZOOKEEPER_HOST --alter --topic $2 --partitions $3
	;;
	reblance)
		$KAFKA_HOME/bin/kafka-preferred-replica-election.sh --bootstrap-server $BROKER
	;;
	produce)
		$KAFKA_HOME/bin/kafka-console-producer.sh --broker-list $BROKER --topic $2
	;;
	consume_from_begin)
		$KAFKA_HOME/bin/kafka-console-consumer.sh --bootstrap-server $BROKER --topic $2 --from-beginning
    ;;
    consume_from_latest)
    	$KAFKA_HOME/bin/kafka-console-consumer.sh --bootstrap-server $BROKER --topic $2 --offset latest --partition $3
    ;;
    consume_from_latest_x)
    	$KAFKA_HOME/bin/kafka-console-consumer.sh --bootstrap-server $BROKER --topic $2 --offset latest --partition $3 --max-messages $4
    ;;
    min_offset)
    	$KAFKA_HOME/bin/kafka-run-class.sh kafka.tools.GetOffsetShell --topic $2 --time -2 --broker-list $BROKER --partitions $3
    ;;
    max_offset)
    	$KAFKA_HOME/bin/kafka-run-class.sh kafka.tools.GetOffsetShell --topic $2 --time -1 --broker-list $BROKER --partitions $3
    ;;
    all_groups)
    	$KAFKA_HOME/bin/kafka-consumer-groups.sh --bootstrap-server $BROKER --list
    ;;
    desc_group)
		$KAFKA_HOME/bin/kafka-consumer-groups.sh --bootstrap-server $BROKER --group $2 --describe
	;;
	del_group)
		$KAFKA_HOME/bin/kafka-consumer-groups.sh --bootstrap-server $BROKER --group $2 --delete
	;;
    del_group_topic)
		$KAFKA_HOME/bin/kafka-consumer-groups.sh --bootstrap-server $BROKER --group $2 --topic $3 --delete
	;;
	random_produce)
		$KAFKA_HOME/bin/kafka-producer-perf-test.sh --topic $2 --num-records $3 --record-size $4 --throughput $3 --producer-props bootstrap.servers=$BROKER
	;;
	*)
		echo '启动并阻塞: kafka start'
		echo '后台启动: kafka start-daemon'
		echo '关闭: kafka stop'
		echo '状态: kafka status'
		echo '重启: kafka restart'
		echo '列举topics: kafka list_topics'
		echo '创建topic: kafka create_topic $topic $partitions $replication'
		echo '删除topic: kafka del_topic $topic'
		echo '修改topic分区: kafka increase_partition $topic $partitions'
		echo '重新平衡leader: kafka reblance'
		echo '生成消息: kafka produce $topic'
		echo '从最早消费: kafka consume_from_begin $topic'
		echo '从指定分区最新消费: kafka consume_from_latest $topic $partition'
		echo '从指定分区最新消费x条: kafka consume_from_latest_x $topic $partition $records'
		echo '查看topic指定分区最小offset: kafka min_offset $topic $partition'
		echo '查看topic指定区最大offset: kafka max_offset $topic $partition'
		echo '查看全部消费组: kafka all_groups'
		echo '描述指定消费组: kafka desc_group $group'
		echo '删除指定消费组: kafka del_group $group'
		echo '删除消费组中指定topic消息信息: kafka del_group_topic $group $topic'
		echo '生产压测: kafka random_produce $topic $records $length '
	;;
esac

exit 0

